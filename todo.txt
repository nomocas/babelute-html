

- router (https://medium.freecodecamp.com/you-might-not-need-react-router-38673620f3d#.l8wdwylds)

- data load (https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.i32e10wnk)
	and container

- better store/state

- life cycle events


.on('blur keyup paste input', ...)



# Classes and Env
Agora
View 

myView:function(babelute){
	return this.view(
		view
		.shouldMountImmediatly(true|false)
		.onAgora('bouh', function(msg){
			this.set('...', msg);
			this.mount();
		})
		.on('init', function(){
			this.load('bloupi', 'zoo::?bloupi'|c3po('zoo').get('...').then((s)=>{}))
				.addMethod('doSomething', function(e){
					this.set('...', ...);
				});
		})
		.once('mounted', ...)
		.on('diffing', function(state){
			this.set(...)
				.push('foo', {})
				.merge(...)
				.load('bloupi', 'zoo::?bloupi');
		})
		.on('destroy', ...)
		.route('/foo')
		.on('route-matched', function(route){
			this.load('...', '...');
		})
		.render((state, methods) => {
			return h.bloupi(state, methods);
		})
	);
}

	view.emit/on/once
	view.mount()
	view.unmount()


Question : how to make .model(...) and .collectionModel(...)

	each call on view to modify state check if it give change : if yes : just set flag 'stateHasChanged' on view
	make shallow-copy of state on requestAnimationFrame and if "stateHasChanged"

# In-place declarations

on tag : 
- transition (mount avec transitionIn and Out)
- bindTransitionOnParent with delay

on view :
- load : need AsyncAgregator in env

- route
function route(view, args, env){
	view.shouldMountImmediatly = false;
	env.scope.parentRouter.on('route-matched', (matched) => {
		var match = testRoute(route, matched);
		if(match){
			view.set('$route', match)
				.mount()
				.emit('route-matched', match);
		}
		else
			view.unmount();
	});
	env.scope.parentRouter.on('unmount', () => {
		view.unmount();
	});
}
